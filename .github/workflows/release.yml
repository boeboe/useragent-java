name: Release & Deploy

on:
  push:
    tags:
      - "v*.*.*" # Match versions like v1.0.0, v1.2.3
  workflow_dispatch:

env:
  MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

permissions:
  contents: write
  packages: write

jobs:
  release:
    name: Build & Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "21"

      - name: Import and Trust GPG Key
        run: |
          echo "${{ secrets.GPG_PRIVATE_KEY }}" | base64 --decode > private.key
          gpg --batch --import private.key
          rm private.key
          gpg --list-secret-keys --keyid-format LONG
          KEY_FINGERPRINT=$(gpg --list-secret-keys --with-colons --fingerprint | awk -F: '/^fpr:/ {print $10}' | head -n1)
          echo "$KEY_FINGERPRINT:6:" | gpg --batch --import-ownertrust

      - name: Extract version from tag
        run: |
          echo "RELEASE_VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV
          echo "Extracted RELEASE_VERSION=${GITHUB_REF#refs/tags/v}"

      - name: Verify RELEASE_VERSION
        env:
          RELEASE_VERSION: ${{ env.RELEASE_VERSION }}
        run: echo "Release version is ${RELEASE_VERSION}"

      - name: Update `pom.xml` version
        env:
          RELEASE_VERSION: ${{ env.RELEASE_VERSION }}
        run: |
          ./mvnw versions:set -DnewVersion=${RELEASE_VERSION} -DgenerateBackupPoms=false
          if ! git diff --exit-code; then
            git config --global user.name "github-actions[bot]"
            git config --global user.email "github-actions[bot]@users.noreply.github.com"
            git checkout main
            git add pom.xml
            git commit -m "Set version to ${RELEASE_VERSION}"
            git push origin main
          else
            echo "No changes to commit. pom.xml is already up-to-date."
          fi

      - name: Build & Package
        run: |
          make clean
          make package

      - name: Upload JAR to GitHub Releases
        uses: softprops/action-gh-release@v2
        with:
          files: target/*.jar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Maven settings.xml
        run: |
          mkdir -p ~/.m2
          echo '<settings xmlns="http://maven.apache.org/SETTINGS/1.0.0"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0
            http://maven.apache.org/xsd/settings-1.0.0.xsd">
            <servers>
              <server>
                <id>central</id>
                <username>${{ secrets.OSSRH_USERNAME }}</username>
                <password>${{ secrets.OSSRH_PASSWORD }}</password>
              </server>
            </servers>
          </settings>' > ~/.m2/settings.xml

      - name: Release to Maven Central
        run: |
          make deploy
